以数组 intervals 表示若干个区间的集合，其中单个区间为 intervals[i] = [starti, endi] 。请你合并所有重叠的区间，并返回一个不重叠的区间数组，该数组需恰好覆盖输入中的所有区间。

/*
 * @lc app=leetcode.cn id=56 lang=cpp
 *
 * [56] 合并区间
 */

// @lc code=start
class Solution {
public:

    static bool cmp(vector<int> a,vector<int> b){
        if(a.front() < b.front())
            return true;
        return false;
    }
    vector<vector<int>> merge(vector<vector<int>>& intervals) {

        sort(intervals.begin(),intervals.end(),cmp);

        vector<vector<int>> result;
        for(int i= 0; i < intervals.size();){
            if(i == intervals.size() - 1){
                result.push_back(intervals[i]);
                break;
            }
            int start = intervals[i].front();
            int end = intervals[i].back();
            for(int j=i+1;j < intervals.size();j++){
                if(end < intervals[j].front()){
                    vector<int> temp={start,end};
                    result.push_back(temp);
                    i = j;
                    break;
                }
                end = max(intervals[j].back(),end);
                if(j == intervals.size() - 1){
                    vector<int> temp={start,end};
                    result.push_back(temp);
                    i = j+1;
                    break;
                }
            }
        }

        return result;
    }
};
// @lc code=end

思路：遍历所有区间，逐个判断
算法复杂度：
时间复杂度：O(nlogn)
空间复杂度：O(logn)
