给你一个整数数组 nums ，其中元素已经按 升序 排列，请你将其转换为一棵 高度平衡 二叉搜索树。

高度平衡 二叉树是一棵满足「每个节点的左右两个子树的高度差的绝对值不超过 1 」的二叉树。

/*
 * @lc app=leetcode.cn id=108 lang=cpp
 *
 * [108] 将有序数组转换为二叉搜索树
 */

// @lc code=start
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        return recursion(nums,0,nums.size());
    }

    TreeNode* recursion(vector<int>& nums,int start,int end)
    {
        if(start >= end)
            return nullptr;

        int mid = (start+end) / 2;
        TreeNode* node = new TreeNode(nums[mid]);

        node->left = recursion(nums,start,mid);
        node->right = recursion(nums,mid+1,end);

        return node;

    }
};
// @lc code=end

思路：使用二分法对数组进行分制，分别递归
时间复杂度：O(n)
空间复杂度：O(n)
