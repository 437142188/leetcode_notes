给你四个整数数组 nums1、nums2、nums3 和 nums4 ，数组长度都是 n ，请你计算有多少个元组 (i, j, k, l) 能满足：

0 <= i, j, k, l < n
nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0

/*
 * @lc app=leetcode.cn id=454 lang=cpp
 *
 * [454] 四数相加 II
 */

// @lc code=start
class Solution {
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4) {
        unordered_map<int,int> temp_map;
        
        for(int i=0;i<nums1.size();i++)
        {
            for(int j=0;j<nums2.size();j++)
            {
                if(temp_map.find(nums1[i]+nums2[j]) != temp_map.end())
                {
                    temp_map[nums1[i]+nums2[j]]++;
                }
                else
                {
                    pair<int,int> temp(nums1[i]+nums2[j],1);
                    temp_map.insert(temp);
                }
            }
        }

        int count = 0;
        for(int i=0;i<nums3.size();i++)
        {
            for(int j=0;j<nums4.size();j++)
            {
                if(temp_map.find(0-nums3[i]-nums4[j]) != temp_map.end())
                {
                    count += temp_map[-nums3[i]-nums4[j]];
                }
            }
        }

        return count;
    }
};
// @lc code=end

思路:如果使用暴力法,则需要四个for循环,因此将a+b+c+d=0化为(a+b)=-(c+d),先将a+b所有可能遍历并存入map中,同时value存储(a+b)出现的次数,然后遍历-(c+d),如果map中存在,则表示a+b+c+d=0,满足要求,
将map中的value累加.
时间复杂度:O(n^2)
空间复杂度:O(n^2)
