计算给定二叉树的所有左叶子之和。

/*
 * @lc app=leetcode.cn id=404 lang=cpp
 *
 * [404] 左叶子之和
 */

// @lc code=start
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if(root == nullptr)
            return 0;

        int sum = 0;

        recursion(root,1,sum);

        return sum;
    }

    void recursion(TreeNode* node,int loc,int& sum)
    {
        if(node->left == nullptr
            && node->right == nullptr
            && loc == 0)
            {
                sum += node->val;
                return;
            }

        if(node->left != nullptr)
            recursion(node->left,0,sum);
        if(node->right != nullptr)
            recursion(node->right,1,sum);
    }
};
// @lc code=end

思路:递归寻找左节点,参数为当前节点,当前节点是父节点的左节点还是右节点,左节点的和
时间复杂度:O(n)
空间复杂度:O(n)
