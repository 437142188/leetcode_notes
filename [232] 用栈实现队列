/*
 * @lc app=leetcode.cn id=232 lang=cpp
 *
 * [232] 用栈实现队列
 */

// @lc code=start
class MyQueue {
public:
    MyQueue() {

    }
    
    void push(int x) {
        while(!stack_1_.empty())
        {
            stack_2_.push(stack_1_.top());
            stack_1_.pop();
        }

        stack_1_.push(x);

        while(!stack_2_.empty())
        {
            stack_1_.push(stack_2_.top());
            stack_2_.pop();
        }
    }
    
    int pop() {
        int result = stack_1_.top();
        stack_1_.pop();
        return result;
    }
    
    int peek() {
        return stack_1_.top();
    }
    
    bool empty() {
        return stack_1_.empty();
    }
private:
    stack<int> stack_1_;
    stack<int> stack_2_;
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
// @lc code=end

思路:使用两个栈,一个用于模拟队列,一个用于中间缓存使用
时间复杂度:O(n)
空间复杂度:O(n)
