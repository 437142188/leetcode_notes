给定一个只包括 '('，')'，'{'，'}'，'['，']' 的字符串，判断字符串是否有效。

有效字符串需满足：

左括号必须用相同类型的右括号闭合。
左括号必须以正确的顺序闭合。
注意空字符串可被认为是有效字符串。

示例 1:

输入: "()"
输出: true
示例 2:

输入: "()[]{}"
输出: true
示例 3:

输入: "(]"
输出: false
示例 4:

输入: "([)]"
输出: false
示例 5:

输入: "{[]}"
输出: true

代码：
class Solution {
public:
    bool isValid(string s) {
        
        string temp;
        map<char,char> tables = {{'(',')'},{'{','}'},{'[',']'}};
        for(int i = 0;i < s.size();i++)
        {
            if(temp.size() == 0)
            {
                temp.push_back(s[i]);
            }
            else if(tables[temp.back()] != s[i])
            {
                temp.push_back(s[i]);
            }
            else
            {
                temp.pop_back();
            }
        }
        
        return temp.size() > 0? false:true;
    }
};

思路：使用栈方法（vector其实也可以，代码中就是用vector实现的）。遍历s字符串，判断当前字符与栈顶的字符是否配对，如果配对则出栈，否则入栈。
复杂度分析：时间复杂度O(n)，空间复杂度O(n)
