根据 逆波兰表示法，求表达式的值。

有效的算符包括 +、-、*、/ 。每个运算对象可以是整数，也可以是另一个逆波兰表达式。

 

说明：

整数除法只保留整数部分。
给定逆波兰表达式总是有效的。换句话说，表达式总会得出有效数值且不存在除数为 0 的情况。

/*
 * @lc app=leetcode.cn id=150 lang=cpp
 *
 * [150] 逆波兰表达式求值
 */

// @lc code=start
class Solution {
public:
    int evalRPN(vector<string>& tokens) {
        stack<int> stack_temp;

        for(const auto&p:tokens)
        {
            if(p == "+") 
            {
                int num2 = stack_temp.top();
                stack_temp.pop();
                int num1 = stack_temp.top();
                stack_temp.pop();
                stack_temp.push(num1+num2);
            }
            else if(p == "-") 
            {
                int num2 = stack_temp.top();
                stack_temp.pop();
                int num1 = stack_temp.top();
                stack_temp.pop();
                stack_temp.push(num1-num2);
            }
            else if(p == "*") 
            {
                int num2 = stack_temp.top();
                stack_temp.pop();
                int num1 = stack_temp.top();
                stack_temp.pop();
                stack_temp.push(num1*num2);
            }
            else if(p == "/") 
            {
                int num2 = stack_temp.top();
                stack_temp.pop();
                int num1 = stack_temp.top();
                stack_temp.pop();
                stack_temp.push(num1/num2);
            }
            else
            {
                stack_temp.push(stoi(p));
            }

        }

        return stack_temp.top();
    }
};
// @lc code=end

思路:使用栈实现逆波兰表达式的解析
时间复杂度:O(n)
空间复杂度:O(n)
